useEffect(() => {
      const singInToken = async () => {
        const token = await AsyncStorage.getItem("token");
        if (token) {
          try { 
            const data = await axios.get(`${api_url}`, {
              headers: {
                Authorization: `Bearer ${token}`,
              }
            });
            navigation.reset({
              routes: [{ name: "Principal"}]
            })
          }
          catch (error){
            navigation.reset({
              routes: [{ name: "Inicio"}]
            })
          }
        }
        else {
          
        }
      }
      singInToken()
    },[])


    useEffect (() => {
        const timer = setTimeout(() => {
          navigation.reset({
            routes: [{ name: "Inicio"}]
          })
        },4000)
        return () => clearTimeout(timer);
      },[])

      <TouchableOpacity activeOpacity={1.0} className="m-5 mr-0" onPress={() => {navigation.navigate('Item')}} >
      <View className="rounded-xl bg-white shadow shadow-black/50 ">
        <Image className="flex h-36 w-48 rounded-t-xl" source={require('../assets/no-image.png')}></Image>
        <Text className="p-2 text-xl font-bold">{name}</Text>
      </View>
      <Text className="flex text-lg font-semibold pl-2.5 pb-5 mt-1">{price}</Text>
    </TouchableOpacity>
  

  Salgados: {
    cantinas: [
        {
            id:1,
            name: 'Cantina 1 - USCS',
            image: require('../assets/uscs.png'),
            stars: 4,
            type: 'Retirada',
            products: [
                {
                    id: 1,
                    name: 'Coxinha',
                    price: '6,00',
                    image: require('../assets/coxinha.jpeg'),
                },
                {
                    id: 2,
                    name: 'Pao de queijo',
                    price: '6,50',
                    image: require('../assets/coxinha.jpeg'),
                },
            ]
        },
        {
            id:2,
            name: 'Cantina 2 - USCS',
            image: require('../assets/uscs.png'),
            stars: 5,
            type: 'Retirada',
            products: [
                {
                    id: 1,
                    name: 'Hot Dog',
                    price: '10,00',
                    image: require('../assets/coxinha.jpeg'),
                },
                {
                    id: 2,
                    name: 'Pao de batata',
                    price: '6,50',
                    image: require('../assets/coxinha.jpeg'),
                },
            ]
        },
    ]
}
},
{
bebidas:{
    cantinas: [
        {
            id:1,
            name: 'Cantina 1 - USCS',
            image: require('../assets/uscs.png'),
            stars: 4,
            type: 'Retirada',
            products: [
                {
                    id: 1,
                    name: 'Coca-cola',
                    price: '6,50',
                    image: require('../assets/coxinha.jpeg'),
                }, 
                {
                    id: 2,
                    name: 'Guarana Antartida',
                    price: '6,50',
                    image: require('../assets/coxinha.jpeg'),
                },
            ]
        }
    ]
}

            <View className="mt-12 flex mx-5 ">
                <TouchableOpacity activeOpacity={0.8} className="flex justify-center items-start">
                    <Text className="bg-orange-500 rounded-full px-2 text-white font-medium">Cantina 2</Text>
                </TouchableOpacity>
            </View>


const [cantinas, setCantinas] = useState('Cantina 1')

    const [cantinaList, setCantinaList] = useState(bancod)
    const setCantinaFilter = cantina=> {
        if (cantina !== 'Cantina 1') {
            setCantinaList([...bancod.filter(e => e.cantina === cantina)])
        } else {
            setCantinaList (bancod)
        }
        setCantinas (cantina)
    }

    const [produtoDestaque, setProdutoDestaque] = useState([])
    const [produtoList, setProdutoList] = useState(produto)


    import { View, Text, TouchableOpacity, Image } from 'react-native'
import React from 'react'

export default function LastWish() {
  return (
    <View className="m-5 p-5 rounded-md bg-white  shadow-md shadow-black/50">
        <View>
            <Text className="font-semibold text-xl">Último Pedido</Text>
        </View>
        <View className="flex flex-row items-center justify-between">
            <View>
                <Text className="font-semibold text-lg">Cantina - 2 USCS</Text>
            </View>

            <View>
                <Image source={require('../assets/uscs.png')} style={{height:50, width:50}}></Image>
            </View>
        </View>
        <View className="mt-2">
            <Text className="text-zinc-400">1 coxinha de frango</Text>
            <Text className="text-zinc-400">1 coca-cola</Text>
        </View>
        <TouchableOpacity activeOpacity={0.8} className="flex items-center justify-center mt-5 py-2 rounded-md bg-orange-500">
            <Text className="font-bold text-md text-white">Pedir novamente</Text>
        </TouchableOpacity>
    </View>
  )
}


export default function Pedidos() {
  return (
      <View className="flex bg-white h-full">
          <Text className=" font-bold text-3xl w-full pl-5 mt-20 mb-2">Meus Pedidos</Text>
          <ScrollView>
          <View>
              <LastWish></LastWish>
          </View>
          <View>
              <Text className="font-semibold text-xl ml-5 mt-5">Histórico</Text>
              <View>
                  <Text className="text-zinc-400 ml-5 mt-5">Qui. 12 de outubro 2023</Text>
                  <HistoricoCard></HistoricoCard>
              </View>
              <View>
                  <Text className="text-zinc-400 ml-5 mt-5">Qua. 11 de outubro 2023</Text>
                  <HistoricoCard></HistoricoCard>
              </View>
              <View>
                  <Text className="text-zinc-400 ml-5 mt-5">Seg. 9 de outubro 2023</Text>
                  <HistoricoCard></HistoricoCard>
              </View>
          </View>
          </ScrollView>
      </View>
  );
}

const Login = async () =>{
    try {
      const response = await axios.post(`${api_url}/auth/user/login`,{
        email,
        password,
      });

      if (response.status === 200){
          navigation.reset({
            routes: [{ name: "Principal"}]
          })
          await AsyncStorage.setItem("token", response.data.access_token)

          const token = await AsyncStorage.getItem("token")
      }
    }
    catch (error){
      if (error.response) {
        
        if (error.response.status === 400) {
          setErrorEmail('Email invalido')
        }

        else if (error.response.status === 401) {
          setErrorPassword('Senha incorreta, tente novamente')
        }
      }
    }
  }